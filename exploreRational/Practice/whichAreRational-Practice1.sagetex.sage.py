## -*- encoding: utf-8 -*-

# This file was *autogenerated* from the file whichAreRational-Practice1.sagetex.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_131 = Integer(131); _sage_const_6 = Integer(6); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4); _sage_const_166 = Integer(166); _sage_const_9 = Integer(9); _sage_const_8 = Integer(8); _sage_const_136 = Integer(136); _sage_const_138 = Integer(138); _sage_const_191 = Integer(191); _sage_const_10 = Integer(10); _sage_const_152 = Integer(152); _sage_const_180 = Integer(180); _sage_const_150 = Integer(150); _sage_const_178 = Integer(178); _sage_const_7 = Integer(7); _sage_const_164 = Integer(164)## This file (whichAreRational-Practice1.sagetex.sage) was *autogenerated* from whichAreRational-Practice1.tex with sagetex.sty version 2015/08/26 v3.0-92d9f7a.
import sagetex
_st_ = sagetex.SageTeXProcessor('whichAreRational-Practice1', version='2015/08/26 v3.0-92d9f7a', version_check=True)
_st_.current_tex_line = _sage_const_9 
_st_.blockbegin()
try:
 var('x')
 
 def RandInt(a,b):
     """ Returns a random integer in [`a`,`b`]. Note that `a` and `b` should be integers themselves to avoid unexpected behavior.
     """
     return QQ(randint(int(a),int(b)))
     # return choice(range(a,b+1))
 
 def NonZeroInt(b,c, avoid = [_sage_const_0 ]):
     """ Returns a random integer in [`b`,`c`] which is not in `av`.
         If `av` is not specified, defaults to a non-zero integer.
     """
     while True:
         a = RandInt(b,c)
         if a not in avoid:
             return a
 
 funcvec = [x,x**_sage_const_2 ,x**_sage_const_3 ,sqrt(x),ln(x),e**x,abs(x)]
 ###### Problem p1
 p1f1pick = RandInt(_sage_const_0 ,_sage_const_6 )
 p1f2pick = RandInt(_sage_const_0 ,_sage_const_6 )
 
 ## Determines if the ``bottom'' function is a function, or just 1; ie determines if this is a rational function or not.
 p1tog = RandInt(_sage_const_0 ,_sage_const_1 )
 
 p1f1 = NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p1f1pick](x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 )
 p1f2 = (NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p1f2pick](x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 ))**p1tog
 
 # Build the display version of the problem.
 p1fdisp = p1f1/p1f2
 
 ## Hack shortcut; if p1tog is 0, then the result is not a rational function, so student should enter 0.
 #   Likewise, if p1tog is 1, then the result is a rational function, so student should enter 1.
 
 p1ans = p1tog
 
 
 ###### Problem p2
 p2f1pick = RandInt(_sage_const_0 ,_sage_const_6 )
 p2f2pick = RandInt(_sage_const_0 ,_sage_const_6 )
 
 ## Determines if the ``bottom'' function is a function, or just 1; ie determines if this is a rational function or not.
 p2tog = RandInt(_sage_const_0 ,_sage_const_1 )
 
 p2f1 = NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p2f1pick](x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 )
 p2f2 = (NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p2f2pick](x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 ))**p2tog
 
 # Build the display version of the problem.
 p2fdisp = p2f1/p2f2
 
 ## Hack shortcut; if p2tog is 0, then the result is not a rational function, so student should enter 0.
 #   Likewise, if p2tog is 1, then the result is a rational function, so student should enter 1.
 
 p2ans = p2tog
 
 
 ###### Problem p3
 p3f1pick = RandInt(_sage_const_0 ,_sage_const_6 )
 p3f2pick = RandInt(_sage_const_0 ,_sage_const_6 )
 
 ## Determines if the ``bottom'' function is a function, or just 1; ie determines if this is a rational function or not.
 p3tog = RandInt(_sage_const_0 ,_sage_const_1 )
 
 p3f1 = NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p3f1pick](x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 )
 p3f2 = (NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p3f2pick](x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 ))**p3tog
 
 # Build the display version of the problem.
 p3fdisp = p3f1/p3f2
 
 ## Hack shortcut; if p3tog is 0, then the result is not a rational function, so student should enter 0.
 #   Likewise, if p3tog is 1, then the result is a rational function, so student should enter 1.
 
 p3ans = p3tog
 
 
 ###### Problem p4
 p4f1pick = RandInt(_sage_const_0 ,_sage_const_6 )
 p4f2pick = RandInt(_sage_const_0 ,_sage_const_6 )
 
 ## Determines if the ``bottom'' function is a function, or just 1; ie determines if this is a rational function or not.
 p4tog = RandInt(_sage_const_0 ,_sage_const_1 )
 
 p4f1 = NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p4f1pick](x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 )
 p4f2 = (NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p4f2pick](x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 ))**p4tog
 
 # Build the display version of the problem.
 p4fdisp = p4f1/p4f2
 
 ## Hack shortcut; if p4tog is 0, then the result is not a rational function, so student should enter 0.
 #   Likewise, if p4tog is 1, then the result is a rational function, so student should enter 1.
 
 p4ans = p4tog
 
 
 
 ###### Problem p5
 p5f1pick = RandInt(_sage_const_0 ,_sage_const_6 )
 p5f2pick = RandInt(_sage_const_0 ,_sage_const_6 )
 p5f3pick = RandInt(_sage_const_0 ,_sage_const_6 )
 p5f4pick = RandInt(_sage_const_0 ,_sage_const_6 )
 p5f5pick = RandInt(_sage_const_0 ,_sage_const_6 )
 p5f6pick = RandInt(_sage_const_0 ,_sage_const_6 )
 
 ## Determines if the ``bottom'' function is a function, or just 1; ie determines if this is a rational function or not.
 p5tog = RandInt(_sage_const_0 ,_sage_const_1 )
 
 p5f1 = NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p5f1pick](x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 )
 p5f2 = NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p5f2pick] (x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 )
 p5f3 = NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p5f3pick] (x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 )
 p5f4 = NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p5f4pick] (x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 )
 p5f5 = NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p5f5pick] (x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 )
 p5f6 = NonZeroInt(-_sage_const_10 ,_sage_const_10 )*funcvec[p5f6pick] (x=(x-RandInt(-_sage_const_10 ,_sage_const_10 )))+RandInt(-_sage_const_10 ,_sage_const_10 )
 
 
 
 # Build the display version of the problem.
 p5fdisp = p5f1/p5f2 + p5f3/p5f4 + p5f5/p5f6
 
 
 
 
except:
 _st_.goboom(_sage_const_131 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_136 
 _st_.inline(_sage_const_0 , latex(p1fdisp))
except:
 _st_.goboom(_sage_const_136 )
try:
 _st_.current_tex_line = _sage_const_138 
 _st_.inline(_sage_const_1 , latex(p1ans))
except:
 _st_.goboom(_sage_const_138 )
try:
 _st_.current_tex_line = _sage_const_150 
 _st_.inline(_sage_const_2 , latex(p2fdisp))
except:
 _st_.goboom(_sage_const_150 )
try:
 _st_.current_tex_line = _sage_const_152 
 _st_.inline(_sage_const_3 , latex(p2ans))
except:
 _st_.goboom(_sage_const_152 )
try:
 _st_.current_tex_line = _sage_const_164 
 _st_.inline(_sage_const_4 , latex(p3fdisp))
except:
 _st_.goboom(_sage_const_164 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_5 , latex(p3ans))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_178 
 _st_.inline(_sage_const_6 , latex(p4fdisp))
except:
 _st_.goboom(_sage_const_178 )
try:
 _st_.current_tex_line = _sage_const_180 
 _st_.inline(_sage_const_7 , latex(p4ans))
except:
 _st_.goboom(_sage_const_180 )
try:
 _st_.current_tex_line = _sage_const_191 
 _st_.inline(_sage_const_8 , latex(p5fdisp))
except:
 _st_.goboom(_sage_const_191 )
_st_.endofdoc()

